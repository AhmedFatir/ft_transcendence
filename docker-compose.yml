version: '3.8'

volumes:
  postgres_data:
    name: postgres_data
  frontend:
    name: frontend
  redis:
    name: redis

networks:
  ft_transcendence:
    name: ft_transcendence

services:
  frontend:
    image: frontend
    build: ./app/frontend
    container_name: frontend
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - frontend:/front
      - frontend:/front/node_modules
      - ./app/frontend:/front
    env_file:
      - .env
    networks:
      - ft_transcendence
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  backend:
    image: backend
    build: ./app/backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app/backend:/back
    env_file:
      - .env
    networks:
      - ft_transcendence
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  postgres:
    image: postgres
    container_name: postgres
    build:
      dockerfile: ./database/Dockerfile.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - ft_transcendence
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  redis:
    image: redis
    container_name: redis
    build:
      dockerfile: ./database/Dockerfile.redis
    volumes:
      - redis:/data
    networks:
      - ft_transcendence
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 5s

  nginx:
    image: nginx
    build: ./nginx
    container_name: nginx
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - ./nginx/access.log:/var/log/nginx/access.log
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ft_transcendence
    restart: always
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 5s